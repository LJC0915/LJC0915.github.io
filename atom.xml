<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LJC</title>
  
  <subtitle>LJC</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://LJC0915.github.io/"/>
  <updated>2018-03-01T07:57:08.000Z</updated>
  <id>https://LJC0915.github.io/</id>
  
  <author>
    <name>[object Object]</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>紀錄學習</title>
    <link href="https://LJC0915.github.io/2018/03/02/Learntips/"/>
    <id>https://LJC0915.github.io/2018/03/02/Learntips/</id>
    <published>2018-03-02T07:43:14.000Z</published>
    <updated>2018-03-01T07:57:08.000Z</updated>
    
    <content type="html"><![CDATA[<p>這邊就跟大家談談我是如何做筆記的</p><h2 id="1-Git-Markdown-筆記"><a href="#1-Git-Markdown-筆記" class="headerlink" title="1. Git + Markdown 筆記"></a>1. Git + Markdown 筆記</h2><p>我會用 markdown 格式寫筆記並用 git 做控管<br>也方便之後查看筆記</p><p>這個 Blog 也是以 markdown 呈現的呢！</p><h2 id="2-List-Card"><a href="#2-List-Card" class="headerlink" title="2. List + Card"></a>2. List + Card</h2><p>這邊我是用 Trello 來施作、、實作的</p><p>首先我都會先拆解我想學得東西並先做成一個 List<br>並在每個 list 中放入 Card<br>Card 紀錄什麼呢？</p><ol><li>學習是查到的連結</li><li>這次學習與之前的差異</li><li>如果發現問題，上次的問題出在哪？</li></ol><p>基本上什麼都能記</p><h4 id="假如我要學數學"><a href="#假如我要學數學" class="headerlink" title="假如我要學數學"></a>假如我要學數學</h4><p>List 就會長這樣</p><ul><li>加法</li><li>減法</li><li>乘法</li><li>除法</li></ul><p>再把每一次的學習狀況紀錄下來放到對應的地方</p><h2 id="3-整理成文章"><a href="#3-整理成文章" class="headerlink" title="3. 整理成文章"></a>3. 整理成文章</h2><p>等到學習都到一個段落時</p><p>回頭審視自己的筆記並將他整理成文章</p><p>然後</p><h3 id="分享給這個世界"><a href="#分享給這個世界" class="headerlink" title="分享給這個世界"></a>分享給這個世界</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;這邊就跟大家談談我是如何做筆記的&lt;/p&gt;
&lt;h2 id=&quot;1-Git-Markdown-筆記&quot;&gt;&lt;a href=&quot;#1-Git-Markdown-筆記&quot; class=&quot;headerlink&quot; title=&quot;1. Git + Markdown 筆記&quot;&gt;&lt;/a&gt;1. Git +
      
    
    </summary>
    
    
      <category term="Learn" scheme="https://LJC0915.github.io/tags/Learn/"/>
    
  </entry>
  
  <entry>
    <title>關於學習的一些方法</title>
    <link href="https://LJC0915.github.io/2018/03/01/TwentyHoursToLearn/"/>
    <id>https://LJC0915.github.io/2018/03/01/TwentyHoursToLearn/</id>
    <published>2018-03-01T07:28:32.000Z</published>
    <updated>2018-03-01T07:44:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>一直以來都想學一些自己覺得很酷的事情，但其實時間也沒有這麼多，<br>就學習一些有效率的學習方法吧</p><pre><code>以下是看了 TED - The first 20 hours how to learn anything 的一些筆記</code></pre><h2 id="開門見山直接說方法"><a href="#開門見山直接說方法" class="headerlink" title="開門見山直接說方法"></a>開門見山直接說方法</h2><ol><li>拆解技能</li><li>學習到能自我修正</li><li>消除學習障礙</li><li>練習</li></ol><h4 id="拆解技能"><a href="#拆解技能" class="headerlink" title="拆解技能"></a>拆解技能</h4><p>將你想學的東西拆解成很小的部分，再去檢視你需要做到什麼地步，去選擇先去學什麼。<br>以吉他為例，你可能只需要學四到五個和弦你就能彈一首歌，<br>但可能吉他的和弦有數百種甚至更多。<br>但其他並不是不重要，而是我們先學最需要的。<br>才能在短視間看到效果。</p><h4 id="學習到能自我修正"><a href="#學習到能自我修正" class="headerlink" title="學習到能自我修正"></a>學習到能自我修正</h4><p>當你能檢視自己的錯誤並能解決，這時候學習就變成一種方法了。</p><h4 id="消除學習障礙"><a href="#消除學習障礙" class="headerlink" title="消除學習障礙"></a>消除學習障礙</h4><p>使自己能專心在學習上每多一秒鐘都是珍貴的</p><h4 id="接著就開始練習吧"><a href="#接著就開始練習吧" class="headerlink" title="接著就開始練習吧"></a>接著就開始練習吧</h4><p>先練個 20 小時試試</p><h2 id="你敢嗎？"><a href="#你敢嗎？" class="headerlink" title="你敢嗎？"></a>你敢嗎？</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;一直以來都想學一些自己覺得很酷的事情，但其實時間也沒有這麼多，&lt;br&gt;就學習一些有效率的學習方法吧&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;以下是看了 TED - The first 20 hours how to learn anything 的一些筆記
&lt;/code&gt;&lt;/pre&gt;
      
    
    </summary>
    
    
      <category term="Learn" scheme="https://LJC0915.github.io/tags/Learn/"/>
    
  </entry>
  
  <entry>
    <title>我學習的大方向</title>
    <link href="https://LJC0915.github.io/2018/02/28/Learning%20Direction/"/>
    <id>https://LJC0915.github.io/2018/02/28/Learning Direction/</id>
    <published>2018-02-28T06:40:09.000Z</published>
    <updated>2018-03-01T07:56:25.000Z</updated>
    
    <content type="html"><![CDATA[<p>一直以來都想學一些自己覺得很酷的事情，但其實時間也沒有這麼多，<br>那就先學學一些可以讓自己學得更快的方法吧！</p><h2 id="基本技能"><a href="#基本技能" class="headerlink" title="基本技能"></a>基本技能</h2><ol><li>中文速讀</li><li>英文能力</li><li>寫作能力</li><li>分享</li></ol><h4 id="中文速讀"><a href="#中文速讀" class="headerlink" title="中文速讀"></a>中文速讀</h4><p>之前有稍微去了解中文速讀是怎麼回事，<br>其實要加快我們閱讀的速讀就只有一件事要做</p><p><strong>去除腦中的聲音</strong></p><p>其實我們的閱讀速度都受限於看到文字後腦袋中的聲音<br>我想，你試著隨便讀一句話就能了解了<br>至於訓練的方式我就不介紹了<br>我的方法是讓目光移動速度快於腦袋中的聲音就可以了</p><h4 id="英文能力"><a href="#英文能力" class="headerlink" title="英文能力"></a>英文能力</h4><p>由於我不是因為要考試<br>我想我的目標很簡單<br>看得懂我想看的、表達我想表達的<br>所以我也就沒去買任何書<br>用以下幾種方式練習</p><ol><li>看英美劇練習聽力<ul><li>看自己 <em>聽得懂</em> 的劇讓自己習慣語速，你讓我聽俄語我想聽多也不會進步，因為我真的聽不懂…</li></ul></li><li>遇到不會的單子就記下來<ul><li>學會他的發音</li><li>把一系列的單子分類，如果不會分就照詞性</li><li>用它造一個 yes/no 問句問自己<ul><li>名詞呢就用 Can I eat a <code>_____</code> ?</li><li>動詞的話則是 Will I <code>________</code> tomorrow ?</li><li>接下來用手機錄下來並試著回答就能順便練習聽力跟口說</li></ul></li></ul></li><li>寫 readme<ul><li>在 project 上用英文寫 readme</li></ul></li><li>網路討論，網路上現在很少中文討論區了，試著用英文吧！<ul><li>在 stackoverflow 上用英文發問或回答</li><li>在 twoplustwo 上用英文發問或回答</li><li>用英文 open/reply issue</li></ul></li></ol><h4 id="寫作能力"><a href="#寫作能力" class="headerlink" title="寫作能力"></a>寫作能力</h4><p>寫作能把雜亂的思緒收斂，如果你能寫下來並讓看得人明白。最大受益的人其實是自己。<br>透過編寫又整理了一次思緒跟掌握整件事的脈絡，可以培養邏輯能力，</p><h4 id="分享"><a href="#分享" class="headerlink" title="分享"></a>分享</h4><p>你可以分享你所記下來的筆記，學到的東西，程式碼片段，什麼都可以，<br>這並不是可以偽裝或速成的東西，結合寫作所產生的產物也能帶來聲望，<br>讓大家能認識你。<br>你或許很厲害但你沒表現出來，誰知道？</p><h3 id="如果你想要世界看到你，那就站出來。"><a href="#如果你想要世界看到你，那就站出來。" class="headerlink" title="如果你想要世界看到你，那就站出來。"></a>如果你想要世界看到你，那就站出來。</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;一直以來都想學一些自己覺得很酷的事情，但其實時間也沒有這麼多，&lt;br&gt;那就先學學一些可以讓自己學得更快的方法吧！&lt;/p&gt;
&lt;h2 id=&quot;基本技能&quot;&gt;&lt;a href=&quot;#基本技能&quot; class=&quot;headerlink&quot; title=&quot;基本技能&quot;&gt;&lt;/a&gt;基本技能&lt;/h2&gt;&lt;
      
    
    </summary>
    
    
      <category term="Learn" scheme="https://LJC0915.github.io/tags/Learn/"/>
    
  </entry>
  
  <entry>
    <title>十個小訣竅讓你成為更好的玩家</title>
    <link href="https://LJC0915.github.io/2018/02/27/tentipsmakebetterplayer/"/>
    <id>https://LJC0915.github.io/2018/02/27/tentipsmakebetterplayer/</id>
    <published>2018-02-27T05:59:53.000Z</published>
    <updated>2018-02-27T06:08:23.000Z</updated>
    
    <content type="html"><![CDATA[<p>[原文])(<a href="https://www.upswingpoker.com/quick-poker-tips-texas-holdem" target="_blank" rel="noopener">https://www.upswingpoker.com/quick-poker-tips-texas-holdem</a>)</p><ol><li>在牌桌上做決定時要有自信，但檢討時要 open mind</li><li>建議打牌的時間是學習的兩倍，但別不學習</li><li>當你比賽拿了冠軍，也別改變你的 bankroll 策略，繼續學習</li><li>選一種形式的 Game 打，並且專精他，不要換來換去輸一堆錢</li><li>打爆低額度或弱一點的局比在高額或難打的局中取得小優勢還好</li><li>當你有一手好牌，應該傾向打快去弄一個大 pot ，而不是想蹲人搞一波</li><li>Don’t be a nit.</li><li>當你在 river 下注，你要清楚知道你是在 value 還是在 bluff ，不然你不該打<ul><li>river bet 要兩極化，因為不會再發牌因此你不需要保護你的 equity</li></ul></li><li>你應該更常在 earlier street bluff. 因為這時候的 equity 最接近<ul><li>We should bluff the most on the flop, slightly less on the turn, and the least on the river.  </li></ul></li><li>錦標賽前期要打得像 cash game ， 不用擔心被淘汰，專注打好紮實的撲克</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;[原文])(&lt;a href=&quot;https://www.upswingpoker.com/quick-poker-tips-texas-holdem&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.upswingpoker.com/qu
      
    
    </summary>
    
    
      <category term="Poker" scheme="https://LJC0915.github.io/tags/Poker/"/>
    
  </entry>
  
  <entry>
    <title>Javascript Note</title>
    <link href="https://LJC0915.github.io/2018/02/26/basic_javascript/"/>
    <id>https://LJC0915.github.io/2018/02/26/basic_javascript/</id>
    <published>2018-02-25T17:01:21.000Z</published>
    <updated>2018-02-26T04:04:19.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Javascript-Note"><a href="#Javascript-Note" class="headerlink" title="Javascript Note"></a>Javascript Note</h1><p>這是上課的簡易筆記</p><p>以供日後的查詢或複習</p><p>裡面記載了一些基礎的 javascript 知識</p><p>包括 elements 操作, Built-in Functions 的介紹 this 的注意事項 以及 Closures 的例子</p><p><code>window.onload</code> : 讀完 html 才跑 javascript,避免操作 dom時 該 element 還沒讀到</p><p>e.g.,</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// do something....</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>typeof</code> : check variable type, 型態檢查</p><p>e.g.,</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> i = <span class="number">7</span>;</span><br><span class="line"><span class="keyword">typeof</span> i;</span><br></pre></td></tr></table></figure><h2 id="Object"><a href="#Object" class="headerlink" title="Object"></a>Object</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> user = &#123;</span><br><span class="line">    name: <span class="string">'Bob'</span>,</span><br><span class="line">    friends: [<span class="string">'Alice'</span>, <span class="string">'Paul'</span>],</span><br><span class="line">    greet: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'Hi, I am '</span> + <span class="keyword">this</span>.name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">user.name</span><br><span class="line">user[<span class="string">'name'</span>]</span><br><span class="line">user.greet()</span><br></pre></td></tr></table></figure><h2 id="Function"><a href="#Function" class="headerlink" title="Function"></a>Function</h2><p><code>arguments</code> 是 javascript 內建的東西</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">arguments</span>[<span class="number">0</span>] + <span class="built_in">arguments</span>[<span class="number">1</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="High-Oreder-Function"><a href="#High-Oreder-Function" class="headerlink" title="High-Oreder Function"></a>High-Oreder Function</h3><p>白話文 : 吃 function 的 function</p><p>e.g.,</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">forEach</span>(<span class="params">arr, f</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;, i &lt; arr.length; i++ ) &#123;</span><br><span class="line">        f(arr[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">forEach([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>], <span class="built_in">console</span>.log);</span><br></pre></td></tr></table></figure><ul><li>Call 時不需加<code>()</code></li></ul><h3 id="Function-as-Method"><a href="#Function-as-Method" class="headerlink" title="Function as Method"></a>Function as Method</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">greet</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'Hi, I am '</span> + <span class="keyword">this</span>.name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">greet();</span><br><span class="line"></span><br><span class="line"><span class="comment">// Hi, I am</span></span><br></pre></td></tr></table></figure><ul><li>this is window by default, 這裡的 this 是 window 這個 object</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> user &#123;</span><br><span class="line">    name: <span class="string">'Bob'</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">user.greet = greet;</span><br><span class="line">user.greet();</span><br><span class="line"></span><br><span class="line"><span class="comment">// Hi, I am Bob</span></span><br></pre></td></tr></table></figure><h3 id="Function-as-Constructor"><a href="#Function-as-Constructor" class="headerlink" title="Function as Constructor"></a>Function as Constructor</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">User</span>(<span class="params">name, friends</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">    <span class="keyword">this</span>.friends = friends;</span><br><span class="line">    <span class="keyword">this</span>.greet = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;...&#125; ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> user1 = <span class="keyword">new</span> User(<span class="string">'Bob'</span>, [<span class="string">'Alice'</span>, <span class="string">'Darren'</span>]);</span><br></pre></td></tr></table></figure><h2 id="Identifying-Classes"><a href="#Identifying-Classes" class="headerlink" title="Identifying Classes"></a>Identifying Classes</h2><p>How to tell the class of object?</p><p>因為用 <code>typeof</code> 都只會告訴你這是一個 object, 所以這裡就教你怎麼判斷一個 object 到底是什麼</p><p>e.g.,</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>].constructor;</span><br><span class="line"><span class="keyword">new</span> <span class="built_in">Date</span>().constructor;</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment">// check</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isDate</span>(<span class="params">obj</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> obj.constructor == <span class="built_in">Date</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Literate"><a href="#Literate" class="headerlink" title="Literate"></a>Literate</h3><p>一個一個處理 object 的 value</p><p>e.g.,</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>( <span class="keyword">var</span> prop <span class="keyword">in</span> obj) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(obj[prop]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Built-in-function"><a href="#Built-in-function" class="headerlink" title="Built-in function"></a>Built-in function</h2><h3 id="Type-Convension"><a href="#Type-Convension" class="headerlink" title="Type Convension"></a>Type Convension</h3><p>To string 轉字串</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">String</span>(<span class="number">123</span>)         <span class="comment">//123</span></span><br><span class="line">(<span class="number">123</span>).toString()    <span class="comment">//123</span></span><br><span class="line">(<span class="number">123.45</span>).toFixed(<span class="number">2</span>) <span class="comment">//12.35</span></span><br></pre></td></tr></table></figure><p>To number 轉數字</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Number</span>(<span class="string">'3.14'</span>)      <span class="comment">// 3.14</span></span><br><span class="line"><span class="built_in">Number</span>(<span class="literal">true</span>)        <span class="comment">// 1</span></span><br><span class="line"><span class="built_in">Number</span>(<span class="string">'99 0'</span>)      <span class="comment">// NaN</span></span><br></pre></td></tr></table></figure><h2 id="Timers"><a href="#Timers" class="headerlink" title="Timers"></a>Timers</h2><p>計時器</p><p>每 X ms 執行一次 (1000ms = 1s)</p><p>e.g.,</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">tick</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">new</span> <span class="built_in">Date</span>().getSeconds());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// call tick every 1s (1000ms)</span></span><br><span class="line"><span class="keyword">var</span> id = setInterval(tick, <span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// stop tick</span></span><br><span class="line">clearInterval(id);</span><br></pre></td></tr></table></figure><h2 id="JSON"><a href="#JSON" class="headerlink" title="JSON"></a>JSON</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> user = &#123;</span><br><span class="line">    name:<span class="string">'Bob'</span>,</span><br><span class="line">    years: <span class="number">12</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// JSON to string</span></span><br><span class="line"><span class="keyword">var</span> json = <span class="built_in">JSON</span>.stringify(user);</span><br><span class="line"></span><br><span class="line"><span class="comment">// string to JSON</span></span><br><span class="line"><span class="keyword">var</span> user2 = <span class="built_in">JSON</span>.parse(json);</span><br></pre></td></tr></table></figure><h2 id="Array"><a href="#Array" class="headerlink" title="Array"></a>Array</h2><p>Built-in Method</p><p>Loop</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params"></span>) </span>&#123; ... &#125;</span><br><span class="line"></span><br><span class="line">arr.forEach(f); <span class="comment">// High-Oreder function</span></span><br></pre></td></tr></table></figure><h2 id="Built-in-Objects"><a href="#Built-in-Objects" class="headerlink" title="Built-in Objects"></a>Built-in Objects</h2><ul><li><p>navigator</p><ul><li>About Browser</li></ul></li><li><p>window</p><ul><li>About Tab</li></ul></li><li><p>location</p><ul><li>About current URL</li></ul></li></ul><p>Use <code>console.dir(obj)</code> to see members</p><h2 id="DOM-Manipulation-Process"><a href="#DOM-Manipulation-Process" class="headerlink" title="DOM Manipulation Process"></a>DOM Manipulation Process</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> el = <span class="built_in">document</span>.querySelector(<span class="string">'h1'</span>);</span><br><span class="line">el.style.color = <span class="string">'red'</span>;</span><br></pre></td></tr></table></figure><p>element select 有下面幾種方式</p><ul><li><code>document.querySelector()</code></li><li><code>document.querySelectAll()</code></li><li><code>document.getElementById()</code></li><li><code>document.getElementByClassName()</code></li><li><code>document.getElementByTagName()</code></li></ul><p>Document 有下面幾個東西</p><ul><li><code>document.URL</code> 網址</li><li><code>document.documentElement</code></li><li><code>document.head</code></li><li><code>document.body</code></li><li><code>document.links</code> 所有的 links</li></ul><p>Element 有如下幾種操作</p><ul><li><code>el.style.color = &#39;red&#39;;</code> 用style 去操作 css</li><li><code>el.classList.add(&#39;some-class&#39;);</code> 新增 class</li><li><code>el.classList.remove(&#39;some-class&#39;);</code> 刪除 class</li><li><code>el.classList.toggle(&#39;some-class&#39;);</code> 如果有該 class 刪除, 若沒有則新增</li><li><code>el.textContent = &#39;Some text&#39;;</code> 加入 text 但就是字串 不是 HTML Tag</li><li><code>el.innerHTML = &#39;Some HTML fragment&#39;;</code> 改寫裡面的 HTML</li><li><code>el.getAttribute(&#39;href&#39;);</code> 取 Attribute</li><li><code>el.setAttribute(&#39;src&#39;, &#39;http://...&#39;);</code> 設 Attribute</li></ul><h3 id="Form-Manipulation"><a href="#Form-Manipulation" class="headerlink" title="Form Manipulation"></a>Form Manipulation</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">"user-form"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"email"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"sex"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"male"</span> <span class="attr">selected</span>=<span class="string">"selected"</span>&gt;</span>Male<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"female"</span>&gt;</span>Female<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"major"</span> <span class="attr">multiple</span>=<span class="string">'multiple'</span> &gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"math"</span>&gt;</span>Math<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"cs"</span>&gt;</span>CS<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"ee"</span>&gt;</span>EE<span class="tag">&lt;/<span class="name">option</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"grade"</span> <span class="attr">value</span>=<span class="string">"A"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"grade"</span> <span class="attr">value</span>=<span class="string">"B"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"valid"</span> <span class="attr">value</span>=<span class="string">"valid"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">var</span> formEl = <span class="built_in">document</span>.getElementById(<span class="string">'user-form'</span>);</span><br><span class="line"><span class="keyword">var</span> emailEl = formEl.elements[<span class="string">'email'</span>];</span><br><span class="line">alert(mailEl.value);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> sexEl = formEl.elements[<span class="string">'sex'</span>]; alert(sexEl.options[sexEl.selectedIndex].value);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> majorEl = formEl.elements[<span class="string">'major'</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; majorEl.options.length; i++) &#123;     </span><br><span class="line">    <span class="keyword">if</span>(majorEl.options[i].selected)</span><br><span class="line">        alert(majorEl.options[i].value);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> gradeEls = formEl.elements[<span class="string">'grade'</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; gradeEls. length; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span>(gradeEls[i].checked)</span><br><span class="line">        alert(gradeEls[i].value);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> validEl = formEl.elements[<span class="string">'valid'</span>];</span><br><span class="line"><span class="keyword">if</span>(validEl.checked)</span><br><span class="line">alert(validEl.value);</span><br></pre></td></tr></table></figure><h2 id="Event-Handling"><a href="#Event-Handling" class="headerlink" title="Event Handling"></a>Event Handling</h2><p>以 Button 為例子</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">el.onclick = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;...&#125;;</span><br><span class="line"></span><br><span class="line">el.addEventListener(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;...&#125; );</span><br></pre></td></tr></table></figure><p>上面的考量是可以覆蓋且唯一事件時使用 下面那個則是多事件需一起觸發時使用</p><p>至於 function 裡面的 e 是 <a href="https://developer.mozilla.org/en-US/docs/Web/Events" target="_blank" rel="noopener">300多種的 event types</a></p><h2 id="Be-careful-about-this"><a href="#Be-careful-about-this" class="headerlink" title="Be careful about this"></a>Be careful about <code>this</code></h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">var</span> user = &#123;</span><br><span class="line">  name: <span class="string">'Bob'</span>,</span><br><span class="line">  greet: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'Hi, I am '</span> + <span class="keyword">this</span>.name);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">setInterval(user.greet, <span class="number">1000</span>);</span><br><span class="line"><span class="comment">// 'Hi, I am '</span></span><br></pre></td></tr></table></figure><p><code>this</code> always binds to the ‘current owner’ of that function</p><p><code>this</code> 就是看現在是誰 call 他的</p><ol><li><code>window</code>, when call as a function. 當直接呼叫當作 function 時, owner 是 window</li><li><code>Object to which . is applied</code>, when called as a method. 當做 method 呼叫時, owner 是 Object</li><li><code>Creating Object</code>, when called as a constructor.</li></ol><h3 id="Explicit-Binding"><a href="#Explicit-Binding" class="headerlink" title="Explicit Binding"></a>Explicit Binding</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> user = &#123;</span><br><span class="line">  name: <span class="string">'Bob'</span>,</span><br><span class="line">  greet: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'Hi, I am '</span> + <span class="keyword">this</span>.name);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">setInterval(user.greet.bind(user), <span class="number">1000</span>);</span><br><span class="line"><span class="comment">// 'Hi, I am Bob'</span></span><br></pre></td></tr></table></figure><h3 id="Call-with-Explicit-Binding"><a href="#Call-with-Explicit-Binding" class="headerlink" title="Call with Explicit Binding"></a>Call with Explicit Binding</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> user = &#123;</span><br><span class="line">  name: <span class="string">'Bob'</span>,</span><br><span class="line">  greet: <span class="function"><span class="keyword">function</span>(<span class="params">peer</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'Hi '</span> + peer + <span class="string">', I am '</span> + <span class="keyword">this</span>.name);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> user2 = &#123;</span><br><span class="line">  name: <span class="string">'Alice'</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 'Hi John, I am Alice'</span></span><br><span class="line">user.greet.call(user2, <span class="string">'John'</span>);</span><br><span class="line">user.greet.apply(user2, [<span class="string">'John'</span>]); <span class="comment">// for delegation</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">greetFromAlice</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> user.greet.apply(user2, <span class="built_in">arguments</span>);</span><br><span class="line">&#125;</span><br><span class="line">greetFromAlice(<span class="string">'Paul'</span>) <span class="comment">// 'Hi Paul, I am Alice'</span></span><br></pre></td></tr></table></figure><h2 id="Closures"><a href="#Closures" class="headerlink" title="Closures"></a>Closures</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* high-order function */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createShift</span>(<span class="params">i</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params">j</span>) </span>&#123; <span class="comment">// closure</span></span><br><span class="line">        <span class="keyword">return</span> i + j;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> shift = createShift(<span class="number">100</span>);   <span class="comment">// set i</span></span><br><span class="line">shift(<span class="number">3</span>) <span class="comment">// 103</span></span><br></pre></td></tr></table></figure><p>Closure is a function using variables defined in outer function that has returned</p><p>Closure 用外部 function 變數的一個 function</p><h3 id="Bad-Closures"><a href="#Bad-Closures" class="headerlink" title="Bad Closures"></a>Bad Closures</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> trs = <span class="built_in">document</span>.querySelectorAll(<span class="string">'tr'</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; trs.length; i++) &#123;</span><br><span class="line">  <span class="keyword">var</span> tr = trs[i];</span><br><span class="line">  tr.onmouseover = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      tr.classList.add(<span class="string">'row-over'</span>);</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>這是一個表格 然後把每一個欄位都加上 mouseover 的效果,<br>但實際上 mouseover 只會改變最後一個 tr</p><p>Fix</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> trs = <span class="built_in">document</span>.querySelectorAll(<span class="string">'tr'</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; trs.length; i++) &#123;</span><br><span class="line">    <span class="keyword">var</span> tr = trs[i];</span><br><span class="line">    tr.onmouseover = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.classList.add(<span class="string">'row-over'</span>);</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Good-Closures"><a href="#Good-Closures" class="headerlink" title="Good Closures"></a>Good Closures</h3><p>data 是一個根據 tr 而不同的 variable, 在 mouseover 時我們會處理 data</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> trs = <span class="built_in">document</span>.querySelectorAll(<span class="string">'tr'</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; trs.length; i++) &#123;</span><br><span class="line">    <span class="keyword">var</span> data = ... <span class="comment">// based on trs[i]</span></span><br><span class="line">    tr[i].onmouseover = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        ... <span class="comment">// process data</span></span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Fix</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> trs = <span class="built_in">document</span>.querySelectorAll(<span class="string">'tr'</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; trs.length; i++) &#123;</span><br><span class="line">    <span class="keyword">var</span> data = ... <span class="comment">// based on trs[i]</span></span><br><span class="line">    tr[i].onmouseover = (<span class="function"><span class="keyword">function</span>(<span class="params">d</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            ... <span class="comment">// process d</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)(data);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>之後會講這篇拆散依照主題重新寫過</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Javascript-Note&quot;&gt;&lt;a href=&quot;#Javascript-Note&quot; class=&quot;headerlink&quot; title=&quot;Javascript Note&quot;&gt;&lt;/a&gt;Javascript Note&lt;/h1&gt;&lt;p&gt;這是上課的簡易筆記&lt;/p&gt;
&lt;p&gt;以
      
    
    </summary>
    
    
      <category term="Javascript" scheme="https://LJC0915.github.io/tags/Javascript/"/>
    
      <category term="Web" scheme="https://LJC0915.github.io/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>My Atom Packages</title>
    <link href="https://LJC0915.github.io/2018/02/26/atom_list/"/>
    <id>https://LJC0915.github.io/2018/02/26/atom_list/</id>
    <published>2018-02-25T16:59:25.000Z</published>
    <updated>2018-02-27T06:05:16.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近從 sublime 轉到 atom</p><p>不要問我為什麼~</p><p>以下是我的安裝的 packages</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">Community Packages (19)</span><br><span class="line">├── atom-beautify@0.30.5</span><br><span class="line">├── autocomplete-python@1.10.3</span><br><span class="line">├── busy-signal@1.4.3</span><br><span class="line">├── color-picker@2.2.5</span><br><span class="line">├── emmet@2.4.3</span><br><span class="line">├── file-icons@2.1.12</span><br><span class="line">├── intentions@1.1.5</span><br><span class="line">├── language-babel@2.74.2</span><br><span class="line">├── linter@2.2.0</span><br><span class="line">├── linter-csslint@2.0.0</span><br><span class="line">├── linter-flake8@2.2.1</span><br><span class="line">├── linter-htmlhint@1.3.3</span><br><span class="line">├── linter-jshint@3.1.5</span><br><span class="line">├── linter-ui-default@1.6.10</span><br><span class="line">├── markdown-preview-enhanced@0.14.10</span><br><span class="line">├── minimap@4.29.7</span><br><span class="line">├── platformio-ide-terminal@2.6.0</span><br><span class="line">├── python-autopep8@0.1.3</span><br><span class="line">└── python-tools@0.6.9</span><br></pre></td></tr></table></figure><h2 id="Package"><a href="#Package" class="headerlink" title="Package"></a>Package</h2><h3 id="atom-beautify"><a href="#atom-beautify" class="headerlink" title="atom-beautify"></a>atom-beautify</h3><blockquote><p>Beautify HTML, CSS, JavaScript, PHP, Python, Ruby, Java, C, C++, C#, Objective-C, CoffeeScript, TypeScript, Coldfusion, SQL, and more in Atom</p></blockquote><p>功能就是自動排版</p><p>使用方法 CTRL + ALT + B</p><p>我用來排 html, css, js, python</p><p>其中 python 還要安裝 autopep8</p><p><code>pip install --upgrade autopep8</code></p><h3 id="autocomplete-python"><a href="#autocomplete-python" class="headerlink" title="autocomplete-python"></a>autocomplete-python</h3><blockquote><p>Python completions for packages, variables, methods, functions, with their arguments. Powered by your choice of Jedi or Kite.</p></blockquote><p>顧名思義就是 python 自動補齊！</p><h3 id="busy-signal"><a href="#busy-signal" class="headerlink" title="busy-signal"></a>busy-signal</h3><blockquote><p>A package that provides an easy to use API to show your package is performing a task</p></blockquote><p>linter-ui-default 所需的 package</p><h3 id="color-picker"><a href="#color-picker" class="headerlink" title="color-picker"></a>color-picker</h3><blockquote><p>Right click or press CMD-SHIFT-C/CTRL-ALT-C to open it.</p></blockquote><p>功能就是選顏色直接輸出色碼，在挑選顏色的時候十分方便</p><p>使用方法</p><ul><li>右鍵 &gt; color-picker</li><li>CMD-SHIFT-C / CTRL-ALT-C</li></ul><h3 id="emmet"><a href="#emmet" class="headerlink" title="emmet"></a>emmet</h3><blockquote><p>Emmet – the essential tool for web developers</p></blockquote><p>強大的網頁開發工具</p><p>我自己用到的功能有</p><p>輸入 tag 之後按 tab 自動生成</p><p>e.g.,</p><p>div(tab) -&gt; <code>&lt;div&gt;&lt;/div&gt;</code></p><p>html:5(tab) -&gt;</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>div&gt;ul&gt;li(tab) -&gt;</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>div.container(tab) -&gt;</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>div+h3+p(tab) -&gt;</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span><span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>基本上就是一些 html 結構的東西，我相信還有很多其他的用法，再麻煩大家自己去挖掘</p><h3 id="file-icons"><a href="#file-icons" class="headerlink" title="file-icons"></a>file-icons</h3><blockquote><p>Assign file extension icons and colours for improved visual grepping</p></blockquote><p>美化的工具，在 UI 中顯示檔案的 icon</p><h3 id="intentions"><a href="#intentions" class="headerlink" title="intentions"></a>intentions</h3><blockquote><p>Base package for showing intentions in Atom</p></blockquote><p>linter-ui-default 所需的 package</p><h3 id="language-babel"><a href="#language-babel" class="headerlink" title="language-babel"></a>language-babel</h3><blockquote><p>JavaScript ES201x, React JSX, Flow and GraphQL Grammar. Babel Transpiler</p></blockquote><p>Highlight Js React Js 文法</p><h3 id="linter-and-…"><a href="#linter-and-…" class="headerlink" title="linter and …"></a>linter and …</h3><blockquote><p>A Base Linter with Cow Powers</p></blockquote><p>一系列的 code 檢查</p><ul><li><p>linter-csslint</p></li><li><p>linter-htmlhint</p></li><li><p>linter-jshint</p></li><li><p>linter-ui-default</p><ul><li>linter 所需的 package</li></ul></li><li><p>linter-flake8</p><ul><li>要安裝 flake8 才能 work</li><li><code>$ pip install flake8</code></li></ul></li></ul><h3 id="markdown-preview-enhanced"><a href="#markdown-preview-enhanced" class="headerlink" title="markdown-preview-enhanced"></a>markdown-preview-enhanced</h3><blockquote><p>One of the ‘BEST’ markdown preview extensions for Atom editor!</p></blockquote><p>markdown preview 支援 live !</p><h3 id="minimap"><a href="#minimap" class="headerlink" title="minimap"></a>minimap</h3><blockquote><p>A preview of the full source code.</p></blockquote><p>程式碼小地圖</p><p><img src="https://i.imgur.com/IR7NKCw.png" alt=""></p><a id="more"></a><h3 id="platformio-ide-terminal"><a href="#platformio-ide-terminal" class="headerlink" title="platformio-ide-terminal"></a>platformio-ide-terminal</h3><blockquote><p>A terminal package for Atom, complete with themes, API and more for PlatformIO IDE. Fork of terminal-plus.</p></blockquote><p>在 atom 中開一個 terminal</p><h3 id="python-autopep8"><a href="#python-autopep8" class="headerlink" title="python-autopep8"></a>python-autopep8</h3><blockquote><p>Format python code using autopep8</p></blockquote><p>存檔的時候自動幫你調成 pep8 coding style</p><h3 id="python-tools"><a href="#python-tools" class="headerlink" title="python-tools"></a>python-tools</h3><blockquote><p>Goto definition, show usages, refactor/rename and more for python files</p></blockquote><p>好像很強 但我還不會用…</p><h2 id="畫面"><a href="#畫面" class="headerlink" title="畫面"></a>畫面</h2><p><img src="https://i.imgur.com/AnAwZSL.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近從 sublime 轉到 atom&lt;/p&gt;
&lt;p&gt;不要問我為什麼~&lt;/p&gt;
&lt;p&gt;以下是我的安裝的 packages&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Community Packages (19)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├── atom-beautify@0.30.5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├── autocomplete-python@1.10.3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├── busy-signal@1.4.3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├── color-picker@2.2.5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├── emmet@2.4.3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├── file-icons@2.1.12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├── intentions@1.1.5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├── language-babel@2.74.2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├── linter@2.2.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├── linter-csslint@2.0.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├── linter-flake8@2.2.1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├── linter-htmlhint@1.3.3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├── linter-jshint@3.1.5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├── linter-ui-default@1.6.10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├── markdown-preview-enhanced@0.14.10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├── minimap@4.29.7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├── platformio-ide-terminal@2.6.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;├── python-autopep8@0.1.3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;└── python-tools@0.6.9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Package&quot;&gt;&lt;a href=&quot;#Package&quot; class=&quot;headerlink&quot; title=&quot;Package&quot;&gt;&lt;/a&gt;Package&lt;/h2&gt;&lt;h3 id=&quot;atom-beautify&quot;&gt;&lt;a href=&quot;#atom-beautify&quot; class=&quot;headerlink&quot; title=&quot;atom-beautify&quot;&gt;&lt;/a&gt;atom-beautify&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;Beautify HTML, CSS, JavaScript, PHP, Python, Ruby, Java, C, C++, C#, Objective-C, CoffeeScript, TypeScript, Coldfusion, SQL, and more in Atom&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;功能就是自動排版&lt;/p&gt;
&lt;p&gt;使用方法 CTRL + ALT + B&lt;/p&gt;
&lt;p&gt;我用來排 html, css, js, python&lt;/p&gt;
&lt;p&gt;其中 python 還要安裝 autopep8&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pip install --upgrade autopep8&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;autocomplete-python&quot;&gt;&lt;a href=&quot;#autocomplete-python&quot; class=&quot;headerlink&quot; title=&quot;autocomplete-python&quot;&gt;&lt;/a&gt;autocomplete-python&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;Python completions for packages, variables, methods, functions, with their arguments. Powered by your choice of Jedi or Kite.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;顧名思義就是 python 自動補齊！&lt;/p&gt;
&lt;h3 id=&quot;busy-signal&quot;&gt;&lt;a href=&quot;#busy-signal&quot; class=&quot;headerlink&quot; title=&quot;busy-signal&quot;&gt;&lt;/a&gt;busy-signal&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;A package that provides an easy to use API to show your package is performing a task&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;linter-ui-default 所需的 package&lt;/p&gt;
&lt;h3 id=&quot;color-picker&quot;&gt;&lt;a href=&quot;#color-picker&quot; class=&quot;headerlink&quot; title=&quot;color-picker&quot;&gt;&lt;/a&gt;color-picker&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;Right click or press CMD-SHIFT-C/CTRL-ALT-C to open it.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;功能就是選顏色直接輸出色碼，在挑選顏色的時候十分方便&lt;/p&gt;
&lt;p&gt;使用方法&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;右鍵 &amp;gt; color-picker&lt;/li&gt;
&lt;li&gt;CMD-SHIFT-C / CTRL-ALT-C&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;emmet&quot;&gt;&lt;a href=&quot;#emmet&quot; class=&quot;headerlink&quot; title=&quot;emmet&quot;&gt;&lt;/a&gt;emmet&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;Emmet – the essential tool for web developers&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;強大的網頁開發工具&lt;/p&gt;
&lt;p&gt;我自己用到的功能有&lt;/p&gt;
&lt;p&gt;輸入 tag 之後按 tab 自動生成&lt;/p&gt;
&lt;p&gt;e.g.,&lt;/p&gt;
&lt;p&gt;div(tab) -&amp;gt; &lt;code&gt;&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;html:5(tab) -&amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;lang&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;en&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;charset&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;viewport&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;width=device-width, initial-scale=1.0&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;http-equiv&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;X-UA-Compatible&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;ie=edge&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;Document&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;title&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;head&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;div&amp;gt;ul&amp;gt;li(tab) -&amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;div.container(tab) -&amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;container&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;div+h3+p(tab) -&amp;gt;&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;h3&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;h3&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;基本上就是一些 html 結構的東西，我相信還有很多其他的用法，再麻煩大家自己去挖掘&lt;/p&gt;
&lt;h3 id=&quot;file-icons&quot;&gt;&lt;a href=&quot;#file-icons&quot; class=&quot;headerlink&quot; title=&quot;file-icons&quot;&gt;&lt;/a&gt;file-icons&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;Assign file extension icons and colours for improved visual grepping&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;美化的工具，在 UI 中顯示檔案的 icon&lt;/p&gt;
&lt;h3 id=&quot;intentions&quot;&gt;&lt;a href=&quot;#intentions&quot; class=&quot;headerlink&quot; title=&quot;intentions&quot;&gt;&lt;/a&gt;intentions&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;Base package for showing intentions in Atom&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;linter-ui-default 所需的 package&lt;/p&gt;
&lt;h3 id=&quot;language-babel&quot;&gt;&lt;a href=&quot;#language-babel&quot; class=&quot;headerlink&quot; title=&quot;language-babel&quot;&gt;&lt;/a&gt;language-babel&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;JavaScript ES201x, React JSX, Flow and GraphQL Grammar. Babel Transpiler&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Highlight Js React Js 文法&lt;/p&gt;
&lt;h3 id=&quot;linter-and-…&quot;&gt;&lt;a href=&quot;#linter-and-…&quot; class=&quot;headerlink&quot; title=&quot;linter and …&quot;&gt;&lt;/a&gt;linter and …&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;A Base Linter with Cow Powers&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;一系列的 code 檢查&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;linter-csslint&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;linter-htmlhint&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;linter-jshint&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;linter-ui-default&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;linter 所需的 package&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;linter-flake8&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;要安裝 flake8 才能 work&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ pip install flake8&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;markdown-preview-enhanced&quot;&gt;&lt;a href=&quot;#markdown-preview-enhanced&quot; class=&quot;headerlink&quot; title=&quot;markdown-preview-enhanced&quot;&gt;&lt;/a&gt;markdown-preview-enhanced&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;One of the ‘BEST’ markdown preview extensions for Atom editor!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;markdown preview 支援 live !&lt;/p&gt;
&lt;h3 id=&quot;minimap&quot;&gt;&lt;a href=&quot;#minimap&quot; class=&quot;headerlink&quot; title=&quot;minimap&quot;&gt;&lt;/a&gt;minimap&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;A preview of the full source code.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;程式碼小地圖&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/IR7NKCw.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="ATOM" scheme="https://LJC0915.github.io/tags/ATOM/"/>
    
  </entry>
  
  <entry>
    <title>將 localhost 讓朋友看見 - Ngrok</title>
    <link href="https://LJC0915.github.io/2018/02/26/ngrok/"/>
    <id>https://LJC0915.github.io/2018/02/26/ngrok/</id>
    <published>2018-02-25T16:53:44.000Z</published>
    <updated>2018-02-26T03:59:22.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Why-use-Ngrok"><a href="#Why-use-Ngrok" class="headerlink" title="Why use Ngrok ?"></a>Why use Ngrok ?</h2><p>平常在寫完一些 web app 或是一些網頁想讓朋友看看時，常常不知道該怎麼分享，</p><p>deploy 到 heroku 上又稍嫌麻煩，於是我便找到了 <strong>Ngrok</strong></p><p>開發時如果是 <code>localhost:1234</code> 這時候只要一行指令 ngrok http 1234</p><p>就能讓朋友連上，實在是很方便！</p><h2 id="Getting-Started"><a href="#Getting-Started" class="headerlink" title="Getting Started"></a>Getting Started</h2><h3 id="下載"><a href="#下載" class="headerlink" title="下載"></a>下載</h3><p>這裡有兩種方式可以下載</p><ul><li><p><a href="https://ngrok.com" target="_blank" rel="noopener">官網</a> 下載</p></li><li><p><code>brew cask install ngrok</code><br></p><h3 id="解壓縮"><a href="#解壓縮" class="headerlink" title="解壓縮"></a>解壓縮</h3></li></ul><p>官網上是有寫這步驟，但我自己下載 Mac OS X 64-Bit 下載下來就能直接使用</p><h3 id="Run-it"><a href="#Run-it" class="headerlink" title="Run it !"></a>Run it !</h3><p>這裡以 <code>localhost:1234</code>為例子</p><ol><li>因為安裝及下載的方法，這裡也分成兩種<ul><li>下載，在 terminal 中切到你下載的目錄位置 然後下指令</li><li>brew install 可以直接下指令</li></ul></li><li>指令<ul><li><code>./ngrok http 1234</code></li><li><code>ngrok http 1234</code></li></ul></li></ol><p>會出現以下畫面，在 Forwarding 的部分就是讓外部連線，而且還有 https</p><p><img src="https://i.imgur.com/ApnXHOO.png" alt=""></p><hr><p>我自己只有如上述那樣簡單使用，如果要更多的功能</p><p>請各位自行看 <a href="https://ngrok.com/docs" target="_blank" rel="noopener">doc</a> 囉</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Why-use-Ngrok&quot;&gt;&lt;a href=&quot;#Why-use-Ngrok&quot; class=&quot;headerlink&quot; title=&quot;Why use Ngrok ?&quot;&gt;&lt;/a&gt;Why use Ngrok ?&lt;/h2&gt;&lt;p&gt;平常在寫完一些 web app 或是一些網頁
      
    
    </summary>
    
    
      <category term="Web" scheme="https://LJC0915.github.io/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>Google Chrome Extensions</title>
    <link href="https://LJC0915.github.io/2018/02/14/Google_Chrome_Extensions/"/>
    <id>https://LJC0915.github.io/2018/02/14/Google_Chrome_Extensions/</id>
    <published>2018-02-14T06:27:27.000Z</published>
    <updated>2018-02-14T07:05:37.000Z</updated>
    
    <content type="html"><![CDATA[<p>趁著過年來個大掃除</p><p>檢查自己所使用的extension並記錄下來，也把沒在使用的刪除</p><h2 id="List"><a href="#List" class="headerlink" title="List"></a>List</h2><ul><li><a href="https://chrome.google.com/webstore/detail/colorpick-eyedropper/ohcpnigalekghcmgcdcenkpelffpdolg" target="_blank" rel="noopener">ColorPick Eyedropper</a></li><li><a href="https://chrome.google.com/webstore/detail/jsonview/chklaanhfefbnpoihckbnefhakgolnmc?hl=zh-TW" target="_blank" rel="noopener">JSONView</a></li><li><a href="https://chrome.google.com/webstore/detail/pttchrome/hhnlfapopmaimdlldbknjdgekpgffmbo?hl=zh-TW" target="_blank" rel="noopener">PttChrome</a></li><li><a href="https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi?hl=zh-TW" target="_blank" rel="noopener">React Developer Tools</a></li><li><a href="https://chrome.google.com/webstore/detail/redux-devtools/lmhkpmbekcpmknklioeibfkpmmfibljd?hl=zh-TW" target="_blank" rel="noopener">Redux DevTools</a></li><li><a href="https://chrome.google.com/webstore/detail/take-webpage-screenshots/mcbpblocgmgfnpjjppndjkmgjaogfceg?hl=zh-TW" target="_blank" rel="noopener">FireShot</a></li><li><a href="https://chrome.google.com/webstore/detail/the-great-suspender/klbibkeccnjlkjkiokjodocebajanakg?hl=zh-TW" target="_blank" rel="noopener">The Great Suspender</a></li><li><a href="https://chrome.google.com/webstore/detail/wappalyzer/gppongmhjkpfnbhagpmjfkannfbllamg?hl=zh-TW" target="_blank" rel="noopener">Wappalyzer</a></li></ul><h2 id="介紹"><a href="#介紹" class="headerlink" title="介紹"></a>介紹</h2><h3 id="ColorPick-Eyedropper"><a href="#ColorPick-Eyedropper" class="headerlink" title="ColorPick Eyedropper"></a>ColorPick Eyedropper</h3><p><a href="https://chrome.google.com/webstore/detail/colorpick-eyedropper/ohcpnigalekghcmgcdcenkpelffpdolg" target="_blank" rel="noopener">Chrome Extension Link</a></p><p>用來吸取網頁顏色色碼的</p><p>點擊右上角 icon 再將滑鼠移動到你想要的顏色，即可顯示顏色，相當方便的小工具</p><h3 id="JSONView"><a href="#JSONView" class="headerlink" title="JSONView"></a>JSONView</h3><p><a href="https://chrome.google.com/webstore/detail/jsonview/chklaanhfefbnpoihckbnefhakgolnmc?hl=zh-TW" target="_blank" rel="noopener">Chrome Extension Link</a></p><p>將 json 整齊的顯示出來 下圖簡單示範</p><p>一般狀況</p><p><img src="https://i.imgur.com/8Jnzc5q.png" alt="Screen Shot 2018-02-14 at 2.42.21 PM"></p><p>JSONView</p><p><img src="https://i.imgur.com/xS10TzC.png" alt="Screen Shot 2018-02-14 at 2.42.36 PM"></p><h3 id="PttChrome"><a href="#PttChrome" class="headerlink" title="PttChrome"></a>PttChrome</h3><p><a href="https://chrome.google.com/webstore/detail/pttchrome/hhnlfapopmaimdlldbknjdgekpgffmbo?hl=zh-TW" target="_blank" rel="noopener">Chrome Extension Link</a></p><p>在瀏覽器中直接使用PTT</p><h3 id="React-Developer-Tools"><a href="#React-Developer-Tools" class="headerlink" title="React Developer Tools"></a>React Developer Tools</h3><p><a href="https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi?hl=zh-TW" target="_blank" rel="noopener">Chrome Extension Link</a></p><p>在 Inspector 模式中可以看到 React 的 dom 而非 render 過的 dom，以便觀察 React component 的 hierarchies</p><h3 id="Redux-DevTools"><a href="#Redux-DevTools" class="headerlink" title="Redux DevTools"></a>Redux DevTools</h3><p><a href="https://chrome.google.com/webstore/detail/redux-devtools/lmhkpmbekcpmknklioeibfkpmmfibljd?hl=zh-TW" target="_blank" rel="noopener">Chrome Extension Link</a></p><p>觀察 Redux 的好工具</p><h3 id="FireShot"><a href="#FireShot" class="headerlink" title="FireShot"></a>FireShot</h3><p><a href="https://chrome.google.com/webstore/detail/take-webpage-screenshots/mcbpblocgmgfnpjjppndjkmgjaogfceg?hl=zh-TW" target="_blank" rel="noopener">Chrome Extension Link</a></p><p>網頁截圖的好工具</p><p>可以選擇整個頁面、可見範圍或自訂區域截圖</p><h3 id="The-Great-Suspender"><a href="#The-Great-Suspender" class="headerlink" title="The Great Suspender"></a>The Great Suspender</h3><p><a href="https://chrome.google.com/webstore/detail/the-great-suspender/klbibkeccnjlkjkiokjodocebajanakg?hl=zh-TW" target="_blank" rel="noopener">Chrome Extension Link</a></p><p>由於 Chrome 很會吃記憶體，於是我便找到這個東西。<br>他會自動暫停你閒置的分頁，可以經由設定調整時間、白名單以及其他狀況。</p><h3 id="Wappalyzer"><a href="#Wappalyzer" class="headerlink" title="Wappalyzer"></a>Wappalyzer</h3><p><a href="https://chrome.google.com/webstore/detail/wappalyzer/gppongmhjkpfnbhagpmjfkannfbllamg?hl=zh-TW" target="_blank" rel="noopener">Chrome Extension Link</a></p><p>有時候會想知道這個網頁使用什麼東西寫的</p><p>這個extension 就會幫你偵測並顯示 雖然非100% 準確但夠用了</p><hr><p>以上是我常用的extension 如果大家有推薦的也歡迎在底下留言</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;趁著過年來個大掃除&lt;/p&gt;
&lt;p&gt;檢查自己所使用的extension並記錄下來，也把沒在使用的刪除&lt;/p&gt;
&lt;h2 id=&quot;List&quot;&gt;&lt;a href=&quot;#List&quot; class=&quot;headerlink&quot; title=&quot;List&quot;&gt;&lt;/a&gt;List&lt;/h2&gt;&lt;ul&gt;
&lt;li
      
    
    </summary>
    
    
      <category term="Browser" scheme="https://LJC0915.github.io/tags/Browser/"/>
    
  </entry>
  
  <entry>
    <title>About This Blog</title>
    <link href="https://LJC0915.github.io/2018/01/23/Blog/"/>
    <id>https://LJC0915.github.io/2018/01/23/Blog/</id>
    <published>2018-01-23T08:58:55.000Z</published>
    <updated>2018-02-14T06:17:36.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="新環境"><a href="#新環境" class="headerlink" title="新環境"></a>新環境</h3><p>Blog 換平台了 從 <a href="https://gohugo.io/" target="_blank" rel="noopener">Hugo</a> 換到 <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a></p><p>因為看到 hexo 的這個主題覺得首頁可以看到比較多的文章</p><p>於是就換 blog 框架了</p><p>跟之前一樣架在 <a href="https://pages.github.com/" target="_blank" rel="noopener">Github Pages</a> 上</p><p>暫時都會定居在這且不換框架了把 …</p><p>除非學會一些UI設計想自己打造一個才會換地方吧</p><p>希望自己往後也能多寫一些文章</p><p>好好釐清自己的思緒及紀錄一些學習與創作的東西</p><h3 id="架設過程分享"><a href="#架設過程分享" class="headerlink" title="架設過程分享"></a>架設過程分享</h3><p>接下來簡單的講一下這個 Blog 是怎麼做的好了</p><p>伺服器的部分</p><p>首先你要有一個 <a href="https://github.com/" target="_blank" rel="noopener">Github</a> 帳號以及去 <a href="https://pages.github.com/" target="_blank" rel="noopener">Github Pages</a> 看一下教學</p><p><a href="https://pages.github.com/" target="_blank" rel="noopener">Github Pages</a> 只支援靜態檔案</p><p>所以到時候搭配 Blog 框架產生靜態檔案放在指定的地方即可</p><p>Blog 的部分</p><p>先跟著 <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a> 首頁馬上把 blog 建立起來</p><p>接下來就可以去找主題來改頭換面一下了</p><p>到 <a href="https://hexo.io/themes/" target="_blank" rel="noopener">Hexo Thems</a> 找一個自己喜歡的主題</p><p><img src="https://i.imgur.com/wsiBy43.png" alt=""></p><p>以上圖為例點圖示就能到使用該主題的 blog 看一下時實際上的樣子</p><p>喜歡的話點標題就會到該主題的 github 頁面</p><p>裡面的 readme 就會教你如何安裝使用該主題了</p><p>接下來就是修改一些文字敘述及更換圖示</p><p>在這裡跟大家分享一下關於 blog 素材的資源 都是免費的</p><ul><li><p>左上角 Logo : <a href="https://www.freelogodesign.org/" target="_blank" rel="noopener">Free Logo Design</a></p></li><li><p>照片/圖片 : <a href="https://unsplash.com/" target="_blank" rel="noopener">Unsplash</a></p></li><li><p>Favicon : <a href="https://www.flaticon.com/" target="_blank" rel="noopener">Flaticon</a></p></li><li><p>顏色 : <a href="http://colorhunt.co/" target="_blank" rel="noopener">Color Hunt</a></p></li></ul><p><strong>Logo</strong> 的部分輸入自己喜歡的文字再選樣式最後自己在做最後的調整</p><p><strong>照片</strong> 是依照自己的喜好輸入關鍵字去找出做適合的照片</p><p><strong>Favicon</strong> 我是在這個我平常找 font icon 的地方去找的</p><p>最後是<strong>顏色</strong>的部分</p><p>因為原本的 navbar 顏色我覺得不好看 就到這個網站去找配色了</p><p>至於要怎麼改就可能自己要找一下他css 是怎麼寫的再去改色碼</p><p>至於評論留言的功能我使用<a href="https://disqus.com/" target="_blank" rel="noopener">Disqus</a></p><p>只要在設定當中把shortname加進去就可以了 很方便使用</p><p>當然你也可以用<a href="https://github.com/gitalk/gitalk" target="_blank" rel="noopener">Gitalk</a></p><p>經過上面的流程就完成這個 blog 了</p><p>噹擋 !</p><p>希望對大家有幫助 也希望大家能分享一些資源給我</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;新環境&quot;&gt;&lt;a href=&quot;#新環境&quot; class=&quot;headerlink&quot; title=&quot;新環境&quot;&gt;&lt;/a&gt;新環境&lt;/h3&gt;&lt;p&gt;Blog 換平台了 從 &lt;a href=&quot;https://gohugo.io/&quot; target=&quot;_blank&quot; rel=&quot;noop
      
    
    </summary>
    
    
      <category term="Hexo" scheme="https://LJC0915.github.io/tags/Hexo/"/>
    
  </entry>
  
</feed>
